{"version":3,"sources":["/Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/$_gendir lazy","/Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/app/app.component.css","/Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/app/app.component.html","/Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/app/app.component.ts","/Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/app/app.module.ts","/Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/app/components/ports-input.component.html","/Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/app/components/ports-input.component.ts","/Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/environments/environment.ts","/Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"p-2\\\">\\n  <ports-input-component [(ngModel)]=\\\"portValue\\\"></ports-input-component>\\n  <div>Single Value Support: {{ portValue | json }}</div>\\n</div>\\n\\n<div class=\\\"p-2\\\">\\n  <ports-input-component [inputType]=\\\"InputType.MULTI\\\" [(ngModel)]=\\\"multiPortValue\\\"></ports-input-component>\\n  <div>Multi value Support: {{ multiPortValue | json }}</div>\\n</div>\\n\\n<div class=\\\"p-2\\\">\\n  <ports-input-component [inputType]=\\\"InputType.SINGLE\\\" [formControl]=\\\"singleFormControl\\\"></ports-input-component>\\n  <div>Single Form Control Example: {{ singleFormControl.value | json }} {{ 'isValid=' + singleFormControl.valid }}</div>\\n</div>\\n\\n<div class=\\\"p-2\\\">\\n  <ports-input-component [inputType]=\\\"InputType.MULTI\\\" [formControl]=\\\"multiFormControl\\\"></ports-input-component>\\n  <div>Multi Form Control Example: {{ multiFormControl.value | json }} {{ 'isValid=' + multiFormControl.valid }} {{\\n    'Errors=' + (multiFormControl.errors | json) }}</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { InputType } from './components/ports-input.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  name = 'Ports Input Control using Custom Form Validator';\n\n  readonly InputType = InputType;\n\n  portValue = []; // [ 80 ];\n  multiPortValue = []; // [90,8080,\"443-445\"];\n  singleFormControl = new FormControl([90]);\n  multiFormControl = new FormControl([80, 4434]);\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PortsInputComponent } from './components/ports-input.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PortsInputComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/app/app.module.ts","module.exports = \"<form class=\\\"pb-1\\\" *ngIf=\\\"inputType === InputType.SINGLE\\\">\\n  <input class=\\\"form-control pb-1\\\" type=\\\"number\\\" #singlePort [formControl]=\\\"singlePortFormCtrl\\\" placeholder=\\\"Enter Port\\\">\\n</form>\\n<form class=\\\"pb-1\\\" *ngIf=\\\"inputType === InputType.MULTI\\\">\\n  <input class=\\\"form-control\\\" type=\\\"text\\\" #multiPorts [formControl]=\\\"multiPortsFormCtrl\\\" placeholder=\\\"Enter multiple ports\\\">\\n  <span class=\\\"small text-muted\\\">Enter comma separated values</span>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/app/components/ports-input.component.html\n// module id = ../../../../../src/app/components/ports-input.component.html\n// module chunks = main","import { Input, Component, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, Validator, Validators, ValidationErrors, FormBuilder, AbstractControl, FormControl, ValidatorFn } from '@angular/forms';\n\n\n/**\n * Custom validator function to check if valid port number or port range is specified\n * @param control Form control\n */\nfunction PortOrPortRangeValidator(required: boolean): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const ports: string = control.value || '';\n    if (required && !ports.length) {\n      return { values: ports, required };\n    }\n\n    if (!required && !ports) {\n      return null;\n    }\n\n    const invalidPorts = ports.split(',').filter((port: string) => {\n      // Check if range\n      if (!port) {\n        return {};\n      }\n      const portValue = (port && parseInt(port, 10));\n      return !(portValue >= 1 && portValue <= 65535);\n    });\n    return invalidPorts.length ? { values: invalidPorts.join(','), required } : null;\n  };\n}\n\n\nexport enum InputType {\n  SINGLE,\n  MULTI\n}\n\n@Component({\n  selector: 'ports-input-component',\n  templateUrl: './ports-input.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: PortsInputComponent, // forwardRef(() => PortInputComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: PortsInputComponent,\n      multi: true\n    }\n  ]\n})\nexport class PortsInputComponent implements ControlValueAccessor, Validator {\n\n  public singlePortFormCtrl = new FormControl('', [Validators.required, Validators.min(1), Validators.max(65535)]);\n  public multiPortsFormCtrl = new FormControl('', PortOrPortRangeValidator(true));\n\n  readonly InputType = InputType;\n\n  @Input()\n  inputType: InputType = InputType.SINGLE;\n\n  @ViewChild('singlePort') singlePortInput;\n  @ViewChild('multiPorts') multiPortsInput;\n\n  private onChange = (_: any) => { };\n  private onTouched = () => { };\n  private _value: any;\n\n  constructor(private fb: FormBuilder) {\n\n    this.singlePortFormCtrl.valueChanges.subscribe((value) => {\n      const newValue = value && parseInt(value, 10) ? [value] : [];\n      this.onChange(newValue);\n      this.onTouched();\n    });\n\n    this.multiPortsFormCtrl.valueChanges.subscribe((value) => {\n      const newValue = (value || '').split(',');\n      this.onChange(newValue);\n      this.onTouched();\n    });\n\n  }\n\n  writeValue(value: any) {\n    console.log(\"Value: \", value);\n    this._value = value;\n    if (this.singlePortFormCtrl && this.inputType === InputType.SINGLE) {\n      const inputValue = (value instanceof Array) && value.length > 0 ? value[0] : '';\n      this.singlePortFormCtrl.setValue(value);\n    }\n\n    if (this.multiPortsInput && this.inputType === InputType.MULTI) {\n      const inputValue = (value || []).join(',');\n      this.multiPortsFormCtrl.setValue(inputValue);\n    }\n\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  validate(control: FormControl): null | ValidationErrors {\n\n    if (this.inputType === InputType.SINGLE) {\n      return this.singlePortFormCtrl.valid ? null : this.singlePortFormCtrl.errors;\n    }\n\n    if (this.inputType === InputType.MULTI) {\n      return this.multiPortsFormCtrl.valid ? null : this.multiPortsFormCtrl.errors;\n    }\n\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/app/components/ports-input.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/ashishp/Personal/workspace/github-repos/ngx-ports-input-control/src/main.ts"],"sourceRoot":"webpack:///"}